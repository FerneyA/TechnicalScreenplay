{"name":"Create booking successfully with XML format","id":"post-booking-api;create-booking-successfully-with-xml-format","scenarioId":"create_booking:Create booking successfully with XML format","methodName":"Create booking successfully with XML format","testSteps":[{"number":1,"description":"When I send a POST request to create a booking with valid data in XML format","duration":641,"startTime":"2025-08-16T10:50:26.766092-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":0,"children":[{"number":2,"description":"Tester sends POST with valid booking data and XML format","duration":616,"startTime":"2025-08-16T10:50:26.785822-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":1,"children":[{"number":3,"description":"Tester executes a POST on the resource /booking","duration":590,"startTime":"2025-08-16T10:50:26.789425500-05:00[America/Bogota]","result":"SUCCESS","precondition":false,"level":2,"children":[{"number":4,"description":"POST https://restful-booker.herokuapp.com/booking","duration":0,"startTime":"2025-08-16T10:50:27.380084-05:00[America/Bogota]","result":"SUCCESS","restQuery":{"method":"POST","path":"https://restful-booker.herokuapp.com/booking","content":"\u003cbooking\u003e\n  \u003cfirstname\u003eJim\u003c/firstname\u003e\n  \u003clastname\u003eBrown\u003c/lastname\u003e\n  \u003ctotalprice\u003e111\u003c/totalprice\u003e\n  \u003cdepositpaid\u003etrue\u003c/depositpaid\u003e\n  \u003cbookingdates\u003e\n    \u003ccheckin\u003e2018-01-01\u003c/checkin\u003e\n    \u003ccheckout\u003e2019-01-01\u003c/checkout\u003e\n  \u003c/bookingdates\u003e\n  \u003cadditionalneeds\u003eBreakfast\u003c/additionalneeds\u003e\n\u003c/booking\u003e","contentType":"application/xml","requestHeaders":"Accept\u003dapplication/xml\r\n\t\t\t\tContent-Type\u003dtext/xml; charset\u003dISO-8859-1","requestCookies":"","responseHeaders":"Content-Length: 21\r\nContent-Type: text/plain; charset\u003dutf-8\r\nDate: Sat, 16 Aug 2025 15:50:26 GMT\r\nEtag: W/\"15-/6VXivhc2MKdLfIkLcUE47K6aH0\"\r\nNel: {\"report_to\":\"heroku-nel\",\"response_headers\":[\"Via\"],\"max_age\":3600,\"success_fraction\":0.01,\"failure_fraction\":0.1}\r\nReport-To: {\"group\":\"heroku-nel\",\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?s\u003dz5b0p0qHg1ZIsW%2FJLM2ZcGKJJ1mP7QsFoocN%2FT%2BA%2FAQ%3D\\u0026sid\u003dc46efe9b-d3d2-4a0c-8c76-bfafa16c5add\\u0026ts\u003d1755359426\"}],\"max_age\":3600}\r\nReporting-Endpoints: heroku-nel\u003d\"https://nel.heroku.com/reports?s\u003dz5b0p0qHg1ZIsW%2FJLM2ZcGKJJ1mP7QsFoocN%2FT%2BA%2FAQ%3D\u0026sid\u003dc46efe9b-d3d2-4a0c-8c76-bfafa16c5add\u0026ts\u003d1755359426\"\r\nServer: Heroku\r\nVia: 1.1 heroku-router\r\nX-Powered-By: Express\r","responseCookies":"\r","responseBody":"Internal Server Error","statusCode":500},"precondition":false,"level":3}]}]}]},{"number":5,"description":"Then the response status code should be 200","duration":50,"startTime":"2025-08-16T10:50:27.407937100-05:00[America/Bogota]","result":"FAILURE","precondition":false,"level":0,"children":[{"number":6,"description":"Status code is correct","duration":16,"startTime":"2025-08-16T10:50:27.411692300-05:00[America/Bogota]","exception":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c500\u003e.\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":696},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"this$2$validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":-1},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":135},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":143},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"statusCode","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":89},{"declaringClass":"co.com.screenplay.project.stepdefinitions.GetBookingByIdStepDefinitions","methodName":"lambda$theResponseStatusCodeShouldBe$0","fileName":"GetBookingByIdStepDefinitions.java","lineNumber":61},{"declaringClass":"co.com.screenplay.project.stepdefinitions.GetBookingByIdStepDefinitions","methodName":"theResponseStatusCodeShouldBe","fileName":"GetBookingByIdStepDefinitions.java","lineNumber":59},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"run","fileName":"GradleWorkerMain.java","lineNumber":69},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"main","fileName":"GradleWorkerMain.java","lineNumber":74}]},"result":"FAILURE","precondition":false,"level":1}]}],"userStory":{"id":"create_booking","storyName":"POST booking API","displayName":"POST booking API","path":"create_booking","pathElements":[{"name":"create_booking","description":""}],"narrative":"  As QA Automation Engineer\n  Want to validate the POST operation in the booking API\n  To ensure that the service works correctly with valid and invalid data.","type":"feature"},"title":"Create booking successfully with XML format","description":"","startTime":"2025-08-16T10:50:26.748898100-05:00[America/Bogota]","endTime":"2025-08-16T10:50:27.461662100-05:00[America/Bogota]","duration":631,"testFailureCause":{"errorType":"java.lang.AssertionError","message":"1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c500\u003e.\n","stackTrace":[{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":696},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"this$2$validateResponseIfRequired","fileName":"ResponseSpecificationImpl.groovy","lineNumber":-1},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":135},{"declaringClass":"io.restassured.internal.ResponseSpecificationImpl","methodName":"statusCode","fileName":"ResponseSpecificationImpl.groovy","lineNumber":143},{"declaringClass":"io.restassured.internal.ValidatableResponseOptionsImpl","methodName":"statusCode","fileName":"ValidatableResponseOptionsImpl.java","lineNumber":89},{"declaringClass":"co.com.screenplay.project.stepdefinitions.GetBookingByIdStepDefinitions","methodName":"lambda$theResponseStatusCodeShouldBe$0","fileName":"GetBookingByIdStepDefinitions.java","lineNumber":61},{"declaringClass":"co.com.screenplay.project.stepdefinitions.GetBookingByIdStepDefinitions","methodName":"theResponseStatusCodeShouldBe","fileName":"GetBookingByIdStepDefinitions.java","lineNumber":59},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"run","fileName":"GradleWorkerMain.java","lineNumber":69},{"declaringClass":"worker.org.gradle.process.internal.worker.GradleWorkerMain","methodName":"main","fileName":"GradleWorkerMain.java","lineNumber":74}]},"testFailureClassname":"java.lang.AssertionError","testFailureMessage":"1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c500\u003e.\n","testFailureSummary":"FAILURE;java.lang.AssertionError;1 expectation failed.\nExpected status code \u003c200\u003e but was \u003c500\u003e.\n;ResponseSpecificationImpl.groovy","projectKey":"","annotatedResult":"FAILURE","isManualTestingUpToDate":false,"manual":false,"testSource":"Cucumber","actors":[{"name":"Tester","can":["browse the web","call an API at https://restful-booker.herokuapp.com"]}],"order":0,"result":"FAILURE"}